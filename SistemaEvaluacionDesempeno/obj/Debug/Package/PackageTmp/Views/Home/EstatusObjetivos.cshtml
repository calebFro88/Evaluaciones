
@{
    ViewBag.Title = "Estatus Evaluaciones";
    if (Session["Estado"] == null)
    {
        Response.Redirect(Url.Action("LogIn", "Home"));
    }


}

<style type="text/css">
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>

<div class="right_col" role="main">
    <div class="">

        <div role="main">
            <div class="">
                <div class="page-title">
                    <div class="title_left">
                        <h3>Estado de Evaluaciones</h3>
                    </div>

                    <div class="title_right">
                        <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
                            <div class="input-group">
                                <label>A&Ntilde;O FISCAL: </label><label id="lblPeriodo"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="row">
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="x_panel">
                            <div class="x_title">


                                <!--SELECCIONA TIPO:&nbsp;&nbsp;&nbsp;<input id="listaTipo" style="width: 20%" />-->
                                <ul class="nav navbar-right panel_toolbox">
                                    <li>
                                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                                    </li>
                                </ul>

                                <div class="clearfix"></div>
                            </div>
                            <div class="x_content">
                                <!--Aqui es donde va el dropdown con los reminders pre cargados-->
                                <!-- Modal -->
                                <div id="myModal" class="modal fade" role="dialog">
                                    <div class="modal-dialog">

                                        <!-- Modal content-->
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                <h4 class="modal-title">Fecha De Envio De Notificacion</h4>
                                            </div>
                                            <div class="modal-body">
                                                <p>@DateTime.Now.ToShortDateString()</p>

                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div id="tblListadoEmpleados"></div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

    var EmpleadosPendientes; //type: array
    var IDPeriodo = @int.Parse(Session["IDPeriodo"].ToString());


    $(document).ready(function (e) {
        //reminders = '';
        CargarPeriodo();


        var tblListadoEmpleados = $("#tblListadoEmpleados").kendoGrid({
            dataSource: {
                transport: {
                    read: {
                        //Direccion del metodo en controlador..
                        url: "@Url.Action("EstadoMisObjetivos", "EvalEstatus")",
                        //Tipo de solicitud al controller..
                        type: "post",
                        //Tipo de dato que retorna la url.
                        dataType: "json"
                    }
                },
                schema: {
                    model: {
                        id: "No_Emp",
                        Departamento: "Departamento"
                    }
                },
                pageSize: 15,
            },
            height: 580,
            groupable: true,
            filterable: {
            },
            pageable: {
                refresh: true,
                //pageSize: 50,
                pageSizes: true,
                buttonCount: 5
            },
            persistSelection: true,
            //change: onChange,
            columns: [

                {
                    field: "Nombre",
                    title: "Nombre",
                    width: 100,
                    filterable: {
                        cell: {
                            operator: "contains",
                            suggestionOperator: "contains"
                        }
                    }
                }, {
                    field: "Apellido",
                    title: "Apellido",
                    width: 100,
                    filterable: {
                        cell: {
                            operator: "contains",
                            suggestionOperator: "contains"
                        }
                    }
                },
                {
                    field: "No_Emp",
                    title: "#",
                    width: 75,
                }, {
                    field: "Departamento",
                    title: "Departamento",
                    width: 100
                   // filterable: {ui: Lista_Dpts}
                }, {
                    field: "Descripcion",
                    title: "Descripcion",
                    width: 100
                }, {
                    field: "TipoEmpleado",
                    title: "TipoEmpleado",
                    width: 100
                    //,filterable: { ui: Lista_Tipos }
                }, {
                    field: "FechaInicio",
                    title: "Fecha Recordatorio",
                    type: 'date',
                    template: '#= ToJavaScriptDate(FechaInicio)#',
                    width: 100
                },
                {
                    field: "Estado",
                    title: "Estatus",
                    width: 100
                },
                {
                    title: "Revisar objetivos",
                    width: 120,
                    template: "<a class='k-button' onclick='RevisionObjetivos(#=No_Emp#)'>Mostrar Objetivos </a> ",
                }
                //{
                //    field: "TipoReporte",
                //    title: "Tipo De Reporte",
                //    width: 100,
                //    hidden: true
                //},
                // { command: { text: "Ver", click: showDetails }, title: " ", width: "100px" }
            ]
        });
    });

        function showDetails(e) {
            e.preventDefault();

           var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            //wnd.content(detailsTemplate(dataItem));
            // wnd.center().open();
           //console.log(dataItem["No_Emp"]);
           if(dataItem["TipoReporte"] == "HPend_Jefe"){
               MostrarReporteSup(dataItem["No_Emp"]);
           }else{
               MostrarReporte(dataItem["No_Emp"]);
           }
        }

        function MostrarReporteSup(NumEmp) {
            swal({
                title: "Atencion!",
                text: "Mostrar Reporte De Evaluacion?",
                icon: "info",
                buttons: true,
                dangerMode: false,
            }).then((enviar) => {
                if (enviar) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        data: "{ No_Emp: " + NumEmp + "}",
                        url: "@Url.Action("VerEstatusDeEvaluacionPDF", "Competencias")",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (datos) {
                            if (datos == "Salary") {
                                location.href = "@Url.Action("ReportSalarySup","Home")";
                            }
                            else if (datos == "Hourly C") {
                                location.href = "@Url.Action("ReporteHourlySup", "Home")";
                            }
                        },
                        error: function (Exception) {
                            console.log(Exception)
                        }
                    });
                }
            });
        }

        function MostrarReporte(NumEmp) {
            swal({
                title: "¡Atención!",
                text: "¿Mostrar Reporte De Evaluación Para Impresión?",
                icon: "info",
                buttons: true,
                dangerMode: false,
            }).then((enviar) => {
                if (enviar) {
                    $.ajax({
                        type: "POST",
                        async: false,
                        data: "{ No_Emp: " + NumEmp + "}",
                        url: "@Url.Action("VerEstatusDeEvaluacionPDF", "Competencias")",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (datos) {
                            if (datos == "Salary") {
                                location.href = "@Url.Action("ReportSalary","Home")";
                            }
                            else if (datos == "Hourly C") {
                                location.href = "@Url.Action("ReporteHourly", "Home")";
                            }
                        },
                        error: function (Exception) {
                            console.log(Exception)
                        }
                    });
                }
            });
        }

         function ToJavaScriptDate(value) {
          var pattern = /Date\(([^)]+)\)/;
          var results = pattern.exec(value);
          var dt = new Date(parseFloat(results[1]));
          var Dia, Mes;
          if (dt.getMonth.length ==1) {
              Mes = '0' + dt.getMonth();
          }
          return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
          //return dt.getFullYear() + "/" + (dt.getMonth() + 1) + "/" + dt.getDate();
         }

         function CargarPeriodo() {
             $.ajax({
                 type: "POST",
                 async: false,
                 data: "{Periodo : '" + IDPeriodo + "' }",
                 url: "@Url.Action("LoadSpecificFiscalYear", "Reminders")",
                 contentType: "application/json; charset=utf-8;",
                 success: function (datos) {
                     console.log(datos);
                     $("#lblPeriodo").text(datos[0].Descripcion);
                 },
             });
         }

        function RevisionObjetivos(NumEmp) {
            swal({
                title: "¡Atención!",
                text: "¿Desea Ver Los Detalles De Los Objetivos?",
                icon: "info",
                buttons: true,
                dangerMode: false,
            }).then((enviar) => {
                if (enviar) {
                    $.ajax({
                        type: 'POST',
                        async: false,
                        data: "{ NumEmp: " + NumEmp + ", IDPeriodo: " + IDPeriodo + " }",
                        url: "@Url.Action("ObjetivoTerminado", "Objetivos")",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function(datos) {
                            location.href = "@Url.Action("ObjetivoTerminado", "Home")";
                        }
                    });
                }
            });
        }


    </script>
}